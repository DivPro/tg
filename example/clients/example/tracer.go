// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package example

import (
	"context"
	"net/http"
	"strings"

	otg "github.com/opentracing/opentracing-go"
	"github.com/sirupsen/logrus"
	"github.com/valyala/fasthttp"
)

func extractSpan(log logrus.FieldLogger, ctx context.Context, opName string) (span otg.Span) {

	var opts []otg.StartSpanOption
	span = otg.SpanFromContext(ctx)

	if span == nil {
		log.Debug("context does not contain span")
	} else {
		opts = append(opts, otg.ChildOf(span.Context()))
	}

	span = otg.GlobalTracer().StartSpan(opName, opts...)
	return
}

func injectSpan(log logrus.FieldLogger, span otg.Span, request *fasthttp.Request) {

	headers := make(http.Header)

	if err := otg.GlobalTracer().Inject(span.Context(), otg.HTTPHeaders, otg.HTTPHeadersCarrier(headers)); err != nil {
		log.WithError(err).Warning("inject span to HTTP headers")
	}

	for key, values := range headers {
		request.Header.Set(key, strings.Join(values, ";"))
	}
}
