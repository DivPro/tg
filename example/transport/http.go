// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"io/ioutil"
	"mime/multipart"

	"github.com/sirupsen/logrus"
	"github.com/valyala/fasthttp"
)

type cookieType interface {
	Cookie() *fasthttp.Cookie
}
type httpServer struct {
	maxRequestBodySize int

	log logrus.FieldLogger

	httpAfter    []Handler
	httpBefore   []Handler
	errorHandler ErrorHandler

	srvHttp *fasthttp.Server
}

func (http *httpServer) applyOptions(options ...Option) {
	for _, option := range options {
		option(http)
	}
}

func uploadFile(ctx *fasthttp.RequestCtx, key string) (data []byte, err error) {

	var fileHeader *multipart.FileHeader
	if fileHeader, err = ctx.FormFile(key); err != nil {
		return
	}

	var file multipart.File
	if file, err = fileHeader.Open(); err != nil {
		return
	}
	defer file.Close()
	return ioutil.ReadAll(file)
}
