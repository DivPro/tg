// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"

	"github.com/opentracing/opentracing-go"

	"github.com/seniorGolang/tg/v2/example/interfaces"
)

type traceExampleRPC struct {
	next interfaces.ExampleRPC
}

func traceMiddlewareExampleRPC(next interfaces.ExampleRPC) interfaces.ExampleRPC {
	return &traceExampleRPC{next: next}
}

func (svc traceExampleRPC) Test(ctx context.Context, arg0 int, arg1 string, opts ...interface{}) (ret1 int, ret2 string, err error) {
	span := opentracing.SpanFromContext(ctx)
	span.SetTag("method", "Test")
	return svc.next.Test(ctx, arg0, arg1, opts...)
}

func (svc traceExampleRPC) Test2(ctx context.Context, arg0 int, arg1 string, opts ...interface{}) (ret1 int, ret2 string, err error) {
	span := opentracing.SpanFromContext(ctx)
	span.SetTag("method", "Test2")
	return svc.next.Test2(ctx, arg0, arg1, opts...)
}
